[
  "tests/test_TUDPTransport.py::TUDPTransportTests::test_close",
  "tests/test_TUDPTransport.py::TUDPTransportTests::test_constructor_blocking",
  "tests/test_TUDPTransport.py::TUDPTransportTests::test_constructor_nonblocking",
  "tests/test_TUDPTransport.py::TUDPTransportTests::test_isopen_when_closed",
  "tests/test_TUDPTransport.py::TUDPTransportTests::test_isopen_when_open",
  "tests/test_TUDPTransport.py::TUDPTransportTests::test_write",
  "tests/test_api.py::APITest::test_active_span",
  "tests/test_api.py::APITest::test_binary_propagation",
  "tests/test_api.py::APITest::test_context_baggage",
  "tests/test_api.py::APITest::test_mandatory_formats",
  "tests/test_api.py::APITest::test_set_operation_name",
  "tests/test_api.py::APITest::test_span_as_context_manager",
  "tests/test_api.py::APITest::test_span_baggage",
  "tests/test_api.py::APITest::test_span_logs",
  "tests/test_api.py::APITest::test_span_tag_value_types",
  "tests/test_api.py::APITest::test_span_tags_with_chaining",
  "tests/test_api.py::APITest::test_start_active_span",
  "tests/test_api.py::APITest::test_start_active_span_default_finish_on_close",
  "tests/test_api.py::APITest::test_start_active_span_finish_on_close",
  "tests/test_api.py::APITest::test_start_active_span_ignore_active_span",
  "tests/test_api.py::APITest::test_start_active_span_not_finish_on_close",
  "tests/test_api.py::APITest::test_start_active_span_parent",
  "tests/test_api.py::APITest::test_start_child_span",
  "tests/test_api.py::APITest::test_start_span",
  "tests/test_api.py::APITest::test_start_span_propagation",
  "tests/test_api.py::APITest::test_start_span_propagation_ignore_active_span",
  "tests/test_api.py::APITest::test_start_span_with_parent",
  "tests/test_api.py::APITest::test_text_propagation",
  "tests/test_api.py::APITest::test_tracer_start_active_span_scope",
  "tests/test_api.py::APITest::test_tracer_start_span_scope",
  "tests/test_api.py::APITest::test_unknown_format",
  "tests/test_codecs.py::TestCodecs::test_abstract_codec",
  "tests/test_codecs.py::TestCodecs::test_b3_codec_inject_parent",
  "tests/test_codecs.py::TestCodecs::test_b3_extract",
  "tests/test_codecs.py::TestCodecs::test_binary_codec",
  "tests/test_codecs.py::TestCodecs::test_context_from_bad_readable_headers",
  "tests/test_codecs.py::TestCodecs::test_context_from_large_ids",
  "tests/test_codecs.py::TestCodecs::test_context_from_readable_headers",
  "tests/test_codecs.py::TestCodecs::test_context_to_readable_headers",
  "tests/test_codecs.py::TestCodecs::test_trace_context_from_bad_string",
  "tests/test_codecs.py::TestCodecs::test_trace_context_from_to_string",
  "tests/test_codecs.py::TestCodecs::test_wrong_carrier",
  "tests/test_codecs.py::TestCodecs::test_zipkin_b3_codec_extract_injected",
  "tests/test_codecs.py::TestCodecs::test_zipkin_b3_codec_inject",
  "tests/test_codecs.py::TestCodecs::test_zipkin_codec_extract",
  "tests/test_codecs.py::TestCodecs::test_zipkin_codec_inject",
  "tests/test_codecs.py::test_default_baggage_without_trace_id",
  "tests/test_codecs.py::test_ad_hoc_baggage_without_trace_id",
  "tests/test_codecs.py::test_round_trip[text_map-carrier0]",
  "tests/test_codecs.py::test_round_trip[http_headers-carrier1]",
  "tests/test_codecs.py::test_round_trip[zipkin-span-format-carrier2]",
  "tests/test_codecs.py::test_inject_with_128bit_trace_id[text_map-carrier0-_text_codec_to_trace_id_string]",
  "tests/test_codecs.py::test_inject_with_128bit_trace_id[http_headers-carrier1-_text_codec_to_trace_id_string]",
  "tests/test_codecs.py::test_inject_with_128bit_trace_id[zipkin-span-format-carrier2-_zipkin_codec_to_trace_id_string]",
  "tests/test_codecs.py::test_debug_id",
  "tests/test_codecs.py::test_baggage_as_unicode_strings_with_httplib",
  "tests/test_config.py::ConfigTests::test_agent_reporting_host",
  "tests/test_config.py::ConfigTests::test_bad_sampler",
  "tests/test_config.py::ConfigTests::test_const_sampler",
  "tests/test_config.py::ConfigTests::test_default_local_agent_reporting_port",
  "tests/test_config.py::ConfigTests::test_disable_metrics",
  "tests/test_config.py::ConfigTests::test_enabled",
  "tests/test_config.py::ConfigTests::test_for_unexpected_config_entries",
  "tests/test_config.py::ConfigTests::test_generate_128bit_trace_id",
  "tests/test_config.py::ConfigTests::test_initialize_tracer",
  "tests/test_config.py::ConfigTests::test_max_tag_value_length",
  "tests/test_config.py::ConfigTests::test_missing_service_name",
  "tests/test_config.py::ConfigTests::test_no_sampler",
  "tests/test_config.py::ConfigTests::test_probabilistic_sampler",
  "tests/test_config.py::ConfigTests::test_propagation",
  "tests/test_config.py::ConfigTests::test_rate_limiting_sampler",
  "tests/test_config.py::ConfigTests::test_reporter_batch_size",
  "tests/test_config.py::ConfigTests::test_reporter_queue_size_valid",
  "tests/test_config.py::ConfigTests::test_tags",
  "tests/test_config.py::ConfigTests::test_throttler",
  "tests/test_crossdock.py::test_trace_propagation[HTTP-HTTP-True]",
  "tests/test_crossdock.py::test_trace_propagation[HTTP-HTTP-False]",
  "tests/test_crossdock.py::test_trace_propagation[HTTP-TCHANNEL-True]",
  "tests/test_crossdock.py::test_trace_propagation[HTTP-TCHANNEL-False]",
  "tests/test_crossdock.py::test_trace_propagation[TCHANNEL-HTTP-True]",
  "tests/test_crossdock.py::test_trace_propagation[TCHANNEL-HTTP-False]",
  "tests/test_crossdock.py::test_trace_propagation[TCHANNEL-TCHANNEL-True]",
  "tests/test_crossdock.py::test_trace_propagation[TCHANNEL-TCHANNEL-False]",
  "tests/test_crossdock.py::test_endtoend_handler",
  "tests/test_crossdock.py::test_determine_host_port",
  "tests/test_crossdock.py::test_parse_host_port",
  "tests/test_local_agent_net.py::test_request_sampling_strategy",
  "tests/test_local_agent_net.py::test_request_throttling_credits",
  "tests/test_metrics.py::test_metrics_factory_noop",
  "tests/test_metrics.py::test_metrics_count_func_called",
  "tests/test_metrics.py::test_metrics_timing_func_called",
  "tests/test_metrics.py::test_metrics_gauge_func_called",
  "tests/test_metrics.py::test_metrics_count_func_noops_if_given_uncallable_count_found",
  "tests/test_metrics.py::test_metrics_timing_func_noops_if_given_uncallable_timing_found",
  "tests/test_metrics.py::test_metrics_gauge_func_noops_if_given_uncallable_gauge_found",
  "tests/test_metrics.py::test_legacy_metrics_factory",
  "tests/test_metrics.py::test_legacy_metrics_factory_noop",
  "tests/test_noop_tracer.py::test_new_trace",
  "tests/test_noop_tracer.py::test_join_trace",
  "tests/test_prometheus.py::test_prometheus_metrics_counter",
  "tests/test_prometheus.py::test_prometheus_metrics_counter_without_tags",
  "tests/test_prometheus.py::test_prometheus_metrics_guage",
  "tests/test_prometheus.py::test_prometheus_metrics_gauge_without_tags",
  "tests/test_rate_limiter.py::test_rate_limiting_sampler",
  "tests/test_reporter.py::test_null_reporter",
  "tests/test_reporter.py::test_in_memory_reporter",
  "tests/test_reporter.py::test_logging_reporter",
  "tests/test_reporter.py::ReporterTest::test_close_drains_queue",
  "tests/test_reporter.py::ReporterTest::test_composite_reporter",
  "tests/test_reporter.py::ReporterTest::test_submit_batch_size_1",
  "tests/test_reporter.py::ReporterTest::test_submit_batch_size_2",
  "tests/test_reporter.py::ReporterTest::test_submit_failure",
  "tests/test_reporter.py::ReporterTest::test_submit_queue_full_batch_size_1",
  "tests/test_sampler.py::test_abstract_sampler_errors",
  "tests/test_sampler.py::test_probabilistic_sampler_errors",
  "tests/test_sampler.py::test_probabilistic_sampler",
  "tests/test_sampler.py::test_const_sampler",
  "tests/test_sampler.py::test_rate_limiting_sampler",
  "tests/test_sampler.py::test_guaranteed_throughput_probabilistic_sampler",
  "tests/test_sampler.py::test_adaptive_sampler",
  "tests/test_sampler.py::test_adaptive_sampler_default_values",
  "tests/test_sampler.py::test_sampler_equality",
  "tests/test_sampler.py::test_remotely_controlled_sampler",
  "tests/test_sampler.py::test_sampling_request_callback",
  "tests/test_sampler.py::test_update_sampler[response0-init_sampler0-expected_sampler0-0-sampler should update to new probabilistic sampler-False-10]",
  "tests/test_sampler.py::test_update_sampler[response1-init_sampler1-expected_sampler1-1-sampler should remain the same if strategy is invalid-True-10]",
  "tests/test_sampler.py::test_update_sampler[response2-init_sampler2-expected_sampler2-0-sampler should remain the same with the same strategy-True-10]",
  "tests/test_sampler.py::test_update_sampler[response3-init_sampler3-expected_sampler3-0-sampler should update to new rate limiting sampler-False-10]",
  "tests/test_sampler.py::test_update_sampler[response4-init_sampler4-expected_sampler4-0-sampler should remain the same with the same strategy-True-10]",
  "tests/test_sampler.py::test_update_sampler[response5-init_sampler5-expected_sampler5-1-sampler should remain the same if strategy is invalid-True-10]",
  "tests/test_sampler.py::test_update_sampler[response6-init_sampler6-expected_sampler6-0-sampler should update to new rate limiting sampler-False-10]",
  "tests/test_sampler.py::test_update_sampler[response7-init_sampler7-expected_sampler7-1-sampler should remain the same if strategy is empty-True-10]",
  "tests/test_sampler.py::test_update_sampler[response8-init_sampler8-expected_sampler8-1-sampler should remain the same if strategy is invalid-True-10]",
  "tests/test_sampler.py::test_update_sampler[response9-init_sampler9-expected_sampler9-1-sampler should remain the same if strategy is invalid-True-None]",
  "tests/test_sampler.py::test_update_sampler_adaptive_sampler",
  "tests/test_sampler.py::test_get_sampling_probability[strategy0-0.003]",
  "tests/test_sampler.py::test_get_sampling_probability[strategy1-0.001]",
  "tests/test_sampler.py::test_get_sampling_probability[None-0.001]",
  "tests/test_sampler.py::test_get_sampling_probability[strategy3-0.001]",
  "tests/test_sampler.py::test_get_sampling_probability[strategy4-0.001]",
  "tests/test_sampler.py::test_get_rate_limit[strategy0-1]",
  "tests/test_sampler.py::test_get_rate_limit[strategy1-0.0016666]",
  "tests/test_sampler.py::test_get_rate_limit[None-0.0016666]",
  "tests/test_sampler.py::test_get_rate_limit[strategy3-0.0016666]",
  "tests/test_sampler.py::test_get_rate_limit[strategy4-0.0016666]",
  "tests/test_span.py::test_baggage",
  "tests/test_span.py::test_baggage_logs",
  "tests/test_span.py::test_is_rpc",
  "tests/test_span.py::test_sampling_priority",
  "tests/test_span.py::test_span_logging",
  "tests/test_span.py::test_span_to_string",
  "tests/test_span.py::test_span_tag_value_max_length",
  "tests/test_span.py::test_span_tag_bool",
  "tests/test_span.py::test_span_tag_long",
  "tests/test_span_context.py::test_parent_id_to_none",
  "tests/test_span_context.py::test_with_baggage_items",
  "tests/test_span_context.py::test_is_debug_id_container_only",
  "tests/test_thrift.py::test_submit_batch",
  "tests/test_thrift.py::test_large_ids",
  "tests/test_thrift.py::test_none_ids",
  "tests/test_thrift.py::test_large_tags",
  "tests/test_thrift.py::test_bool_tags",
  "tests/test_thrift.py::test_bool_tags_false",
  "tests/test_thrift.py::test_long_tags",
  "tests/test_thrift.py::test_double_tags",
  "tests/test_thrift.py::test_parse_sampling_strategy",
  "tests/test_thrift.py::test_parse_span_references",
  "tests/test_throttler.py::test_throttler_simple",
  "tests/test_throttler.py::test_throttler_no_io_loop",
  "tests/test_throttler.py::test_throttler_credits",
  "tests/test_throttler.py::test_throttler_init_polling",
  "tests/test_throttler.py::test_throttler_delayed_polling",
  "tests/test_throttler.py::test_throttler_request_callback",
  "tests/test_traceback_log.py::test_traceback_full",
  "tests/test_traceback_log.py::test_traceback_cut",
  "tests/test_tracer.py::test_start_trace",
  "tests/test_tracer.py::test_forced_sampling",
  "tests/test_tracer.py::test_start_child[arg]",
  "tests/test_tracer.py::test_start_child[ref]",
  "tests/test_tracer.py::test_one_span_per_rpc[True]",
  "tests/test_tracer.py::test_one_span_per_rpc[False]",
  "tests/test_tracer.py::test_child_span",
  "tests/test_tracer.py::test_follows_from",
  "tests/test_tracer.py::test_sampler_effects",
  "tests/test_tracer.py::test_serialization[span]",
  "tests/test_tracer.py::test_serialization[context]",
  "tests/test_tracer.py::test_serialization_error",
  "tests/test_tracer.py::test_tracer_tags",
  "tests/test_tracer.py::test_tracer_tags_passed_to_reporter",
  "tests/test_tracer.py::test_tracer_tags_no_hostname",
  "tests/test_tracer.py::test_tracer_tags_on_root_span[root-expected_tags0]",
  "tests/test_tracer.py::test_tracer_tags_on_root_span[child-expected_tags1]",
  "tests/test_tracer.py::test_tracer_tags_on_root_span[rpc-server-expected_tags2]",
  "tests/test_tracer.py::test_tracer_override_codecs",
  "tests/test_tracer.py::test_tracer_hostname_tag",
  "tests/test_tracer.py::test_tracer_ip_tag",
  "tests/test_tracer.py::test_tracer_throttler",
  "tests/test_tracer.py::test_tracer_128bit_trace_id",
  "tests/test_tracer_benchmark.py::test_noop_tracer",
  "tests/test_tracer_benchmark.py::test_no_sampling",
  "tests/test_tracer_benchmark.py::test_100pct_sampling",
  "tests/test_tracer_benchmark.py::test_100pct_sampling_250mcs",
  "tests/test_tracer_benchmark.py::test_all_batched_size10",
  "tests/test_tracer_benchmark.py::test_all_batched_size5",
  "tests/test_tracer_benchmark.py::test_all_not_batched",
  "tests/test_utils.py::ConfigTests::test_error_reporter_doesnt_send_log_messages_if_before_deadline",
  "tests/test_utils.py::ConfigTests::test_error_reporter_sends_log_messages_if_after_deadline",
  "tests/test_utils.py::ConfigTests::test_error_reporter_sends_metrics_if_configured",
  "tests/test_utils.py::ConfigTests::test_get_0_boolean",
  "tests/test_utils.py::ConfigTests::test_get_1_boolean",
  "tests/test_utils.py::ConfigTests::test_get_None_boolean",
  "tests/test_utils.py::ConfigTests::test_get_false_boolean",
  "tests/test_utils.py::ConfigTests::test_get_true_boolean",
  "tests/test_utils.py::ConfigTests::test_get_unknown_boolean",
  "tests/test_utils.py::test_local_ip_does_not_blow_up",
  "tests/test_utils.py::test_get_local_ip_by_socket_does_not_blow_up"
]