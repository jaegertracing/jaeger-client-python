sudo: required

dist: trusty

language: python

matrix:
  include:
  - python: '2.7'
    env: COVER=1
  - python: '2.7'
    env: CROSSDOCK=1
  - python: '3.6'

services:
  - docker

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.8.0
    - COMMIT=${TRAVIS_COMMIT::8}
    # DOCKER_USER
    - secure: "V2CBqCBxMOv9H3v/DcDVPABcxktssVaupbQh7qU2rLFWv5SmJKBN+0ZixmPFQ5ivwNcs93HM+Qck6plY+VGxIFMppvkUveJqKoXnLvk/fdrOyeneQubYXxR3Z2FF5Klml8Jdhi6L6BbYNyeCSMBUljCHj5cnEVA9Z+z8jUxywxk1KjtEDIulzb79TaZaA6pQVA9NRzxnGWqNnlV+9D35Ik0JXMRVMumSPwux6yJvoCQG3J6oJ/drvsdD890xnofuDc71yZTNXKQABqkRheTvDFaQdP8TDSyy71q9A74L+PRpwxP+cF77w8EzXRcFGKrl0xJZMQDpr8Wz8JUL36ft9xSoI6EJChyipIl2G2K1wpx6N8/9YxTkVIDiSxt5CvqJj2gt37GjR8W6qU3cBnwrpFaC+RJtiou/YJstSmwC/hsskTSKy3wDaa7G13pMhXEAhvfplDOchOuNG6ElLkatJ1RxPTdKtZc1YGg4OTcXFg+BqRIEZ57RJ3qTsxpWjZYmo2RwklAL6CfaFBUPGZiNrE4MGhO4/cXbqqaXG+X2sercW658+o7M7RE/BwC4+e5mDGOLGiry5Qy7+9bVJqJKTN8UVmhCJ23MNasVqAcQvzsGp1nZYQYFzcSfGRzqrqM2zIY6sjj5rfDGyYd8ifQFEi6fdWgMqF17PgUvKUHd5dM="
    # DOCKER_PASS
    - secure: "xxoMQo7hF+yr8SyITXonPQahEDcy5Y+uyX4kiVQxtlRIN/Nd1vL64PIocB/M4k9MhSMmz15fFjTtHuzk/tVKpHpgX9SFVCRRAt5qbzekm9NOce25BqJm33zgEKO979sNtn5Aen8ocU5uIar9IKhzV/SaEXPDqNmCGlnF/xAbvKjtTq+PjLy4xj6UKHTvSfYQFsOBgVzmZk759XVAiODN2szIzzXTNMfxOK6FG7w7O2U9VZ7lsvqC7NymXSocp4iF4kOlvAq13sFGYYMJ+1yReODAGNsUZv0TPgPT5NSxPA5OxjVNlPnlmvD6IjZvzpkciPyjsUTV8OIiuyE8GdUKc1FHKvUavN16ac7vC2dAv1VYNFvlr61RIpUAMNk+7k9fX6M5mHBzhnfNSjF2MmKyVDv4PqgLAQOtk9Vbhd8EdZS+/3MRg8DZDWQE8h0rPJQTPWDTMQ4q4yQcpygBnICB0gACIlTFSevnvsTQGUQfR/0GPB8AGsEHTSw7FUQI7dD1JYteRlgk9vNeYpeYrtgom5v9KSeaio1gTB7OlTd3car2iTYSPUgYpXLLY4vV/HEVW+FUWtCkgojWACUmFschNGPxV+nkjjlgj+Nonnz4XK5Y4l4W8Y6N7fTpxEIB9O+5e+Xnf6RhvoWvw/uMbagvK2U+sqFcV0tj8KyfWqtAm3s="

before_install:
  - docker version
  - if [ "$CROSSDOCK" = "1" ]; then make install_docker_ci ; fi

install:
  - make bootstrap

script:
  - if [ "$CROSSDOCK" != "1" ]; then make test_ci ; fi
  - if [ "$COVER" = "1" ]; then coveralls -v ; fi
  - if [ "$CROSSDOCK" = "1" ]; then make crossdock ; fi

after_failure:
  - timeout 5 if [ "$CROSSDOCK" = "1" ]; then docker-compose -f crossdock/docker-compose.yml logs ; fi

after_success:
  - export REPO=jaegertracing/xdock-py
  - export PR=https://api.github.com/repos/$TRAVIS_REPO_SLUG/pulls/$TRAVIS_PULL_REQUEST
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo `curl -s $PR | jq -r .head.ref`; fi)
  - export TAG=`if [ "$BRANCH" == "master" ]; then echo "latest"; else echo $BRANCH; fi`
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, REPO=$REPO, PR=$PR, BRANCH=$BRANCH, TAG=$TAG"
  - if [ "$BRANCH" == "master" ] && [ "$CROSSDOCK" == "1" ]; then echo 'upload to Docker Hub'; else echo 'skip docker upload for PR'; exit 0; fi
  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  - docker build -f crossdock/Dockerfile -t $REPO:$COMMIT .
  - docker tag $REPO:$COMMIT $REPO:$TAG
  - docker tag $REPO:$COMMIT $REPO:travis-$TRAVIS_BUILD_NUMBER
  - docker push $REPO

